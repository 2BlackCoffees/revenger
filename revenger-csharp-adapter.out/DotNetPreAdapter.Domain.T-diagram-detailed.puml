@startuml
skinparam linetype ortho
title <size:20>DotNetPreAdapter.Domain.T **detailed** </size>
note "Your are analyzing:\nDotNetPreAdapter.Domain.T **detailed** \n\n==Filter==\nYou can click either the namespaces \nor class names for filtering them and their\ndirect dependencies.\n\n==Select other==\n* DotNetPreAdapter.Domain.T **simplified** :\n   [[DotNetPreAdapter.Domain.T-diagram-simplified.svg]]\n* Full diagram **detailed** and **grouped per namespace**:\n   [[full-diagram-detailed-grouped-per-namespace.svg]]\n* Home:\n   [[index.html]]" as FloatingNote
class DotNetPreAdapter.Domain.T [[DotNetPreAdapter.Domain.T-diagram-detailed.svg]] #yellow {
}
  abstract class DotNetPreAdapter.Domain.ASTVisitor [[DotNetPreAdapter.Domain.ASTVisitor-diagram-detailed.svg]]  {
    + datastructure: DotNetPreAdapter.Domain.Datastructure
    + model: DotNetPreAdapter.Domain.SemanticModel
    + usingDict: DotNetPreAdapter.Domain.dict[string, string]
    + logger: DotNetPreAdapter.Utils.Logger
==
    + SimplifyType(<font color="6060BB"></font>)
--
    + SyntaxNode(<font color="6060BB">node:DotNetPreAdapter.Domain.SyntaxNode</font>)
    - <font color="909090">SyntaxNode.convertedType: DotNetPreAdapter.Domain.ITypeSymbol</font>
--
    + GetCurrentClassName(<font color="6060BB"></font>)
--
    + CreateClassInterface(<font color="6060BB">node:DotNetPreAdapter.Domain.T</font>)
    - <font color="909090">CreateClassInterface.parentSubDataStructure: DotNetPreAdapter.Domain.Datastructure.SubDataStructure</font>
    - <font color="909090">CreateClassInterface.subDataStructure: DotNetPreAdapter.Domain.Datastructure.SubDataStructure</font>
    - <font color="909090">CreateClassInterface.tmpBase: DotNetPreAdapter.Domain.ITypeSymbol</font>
--
    + getCurrentContext(<font color="6060BB"></font>)
    + ArgumentsTupleToString(<font color="6060BB">arguments_tuple:DotNetPreAdapter.Domain.list[Tuple[string, string, string]]</font>)
    + cleanForRegEx(<font color="6060BB"></font>)
    + VisitNamespaceDeclaration(<font color="6060BB">node:DotNetPreAdapter.Domain.NamespaceDeclarationSyntax</font>)
    + VisitUsingDirective(<font color="6060BB">node:DotNetPreAdapter.Domain.UsingDirectiveSyntax</font>)
    + VisitEnumDeclaration(<font color="6060BB">node:DotNetPreAdapter.Domain.EnumDeclarationSyntax</font>)
    + VisitInterfaceDeclaration(<font color="6060BB">node:DotNetPreAdapter.Domain.InterfaceDeclarationSyntax</font>)
    + VisitClassDeclaration(<font color="6060BB">node:DotNetPreAdapter.Domain.ClassDeclarationSyntax</font>)
--
    + VisitMethodDeclaration(<font color="6060BB">node:DotNetPreAdapter.Domain.MethodDeclarationSyntax</font>)
    - <font color="909090">VisitMethodDeclaration.arguments_tuple: DotNetPreAdapter.Domain.list[Tuple[string, string, string]]</font>
    - <font color="909090">VisitMethodDeclaration.parameterSymbol: DotNetPreAdapter.Domain.IParameterSymbol</font>
    - <font color="909090">VisitMethodDeclaration.subDataStructure: DotNetPreAdapter.Domain.Datastructure.SubDataStructure</font>
--
    + VisitVariableDeclaration(<font color="6060BB">node:DotNetPreAdapter.Domain.VariableDeclarationSyntax</font>)
    - <font color="909090">VisitVariableDeclaration.subDataStructure: DotNetPreAdapter.Domain.Datastructure.SubDataStructure</font>
    - <font color="909090">VisitVariableDeclaration.aliasInfo: DotNetPreAdapter.Domain.IAliasSymbol</font>
    - <font color="909090">VisitVariableDeclaration.type: DotNetPreAdapter.Domain.ITypeSymbol</font>
    - <font color="909090">VisitVariableDeclaration.method: DotNetPreAdapter.Domain.Datastructure.Method</font>
--
  }
 ' *************************************** 
 ' *************************************** 
 ' *************************************** 
' Class relations extracted from namespace:
' 
' Class relations extracted from namespace:
' DotNetPreAdapter.Domain
DotNetPreAdapter.Domain.ASTVisitor .[#6060BB].> DotNetPreAdapter.Domain.T  : uses 
@enduml