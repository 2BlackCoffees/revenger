@startuml
skinparam linetype ortho
title <size:20>MyNamespace **detailed** </size>
note "Your are analyzing:\nMyNamespace **detailed** \n\n==Filter==\nYou can click either the namespaces \nor class names for filtering them and their\ndirect dependencies.\n\n==Select other==\n* MyNamespace **simplified** :\n   [[MyNamespace-diagram-simplified.svg]]\n* Full diagram **detailed** and **grouped per namespace**:\n   [[full-diagram-detailed-grouped-per-namespace.svg]]\n* Home:\n   [[index.html]]" as FloatingNote
class Enum [[Enum-diagram-detailed.svg]] #MintCream {
}
class IComparable [[IComparable-diagram-detailed.svg]] #MintCream {
}
class IFormattable [[IFormattable-diagram-detailed.svg]] #MintCream {
}
class IConvertible [[IConvertible-diagram-detailed.svg]] #MintCream {
}
class CSharpSyntaxWalker [[CSharpSyntaxWalker-diagram-detailed.svg]] #MintCream {
}
abstract class DotNetPreAdapter.Program [[DotNetPreAdapter.Program-diagram-detailed.svg]]  {
  - removeMe(<font color="6060BB"></font>): <font color="BB6060">void</font>
  - <font color="909090">removeMe.u1: MyNamespace.UnusedClass</font>
  - <font color="909090">removeMe.u2: DotNetPreAdapter.UnusedClass</font>
  - <font color="909090">removeMe.u3: MyNamespace.UnusedClass1</font>
--
  - Main(<font color="6060BB"></font>): <font color="BB6060">int</font>
  - <font color="909090">Main.logger: DotNetPreAdapter.Utils.Logger</font>
  - <font color="909090">Main.ast: DotNetPreAdapter.Service.AnalyzeAST</font>
--
}
  abstract class DotNetPreAdapter.Domain.Datastructure [[DotNetPreAdapter.Domain.Datastructure-diagram-detailed.svg]]  {
    + class_to_datastructure: dict[string, DotNetPreAdapter.Domain.Datastructure.SubDataStructure]
    + namespace_to_datastructures: dict[string, list[DotNetPreAdapter.Domain.Datastructure.SubDataStructure]]
    + namespace_to_namespace_list: dict[string, list[string]]
    + logger: DotNetPreAdapter.Utils.Logger
==
    + ResolveClassNames(<font color="6060BB"></font>): <font color="BB6060">void</font>
    - <font color="909090">ResolveClassNames.variables: list[DotNetPreAdapter.Domain.Datastructure.Variable]</font>
    - <font color="909090">ResolveClassNames.variable: DotNetPreAdapter.Domain.Datastructure.Variable</font>
--
    - CorrectClassScope(<font color="6060BB">subDataStructure:DotNetPreAdapter.Domain.Datastructure.SubDataStructure</font>): <font color="BB6060">void</font>
    - getFQDNClassNameFromNamespacelist(<font color="6060BB"></font>): <font color="BB6060">string</font>
    - GetFQDNForUsedClassName(<font color="6060BB">subDataStructure:DotNetPreAdapter.Domain.Datastructure.SubDataStructure</font>): <font color="BB6060">string</font>
    + get_skip_types(<font color="6060BB"></font>): <font color="BB6060">list[string]</font>
    - append_sub_datastructure(<font color="6060BB">sub_datastructure:DotNetPreAdapter.Domain.Datastructure.SubDataStructure</font>): <font color="BB6060">void</font>
--
    + append_class(<font color="6060BB"></font>): <font color="BB6060">void</font>
    - <font color="909090">append_class.sub_datastructure: DotNetPreAdapter.Domain.Datastructure.SubDataStructure</font>
--
    + get_classname_list(<font color="6060BB"></font>): <font color="BB6060">list[string]</font>
    + get_datastructures_from_class_name(<font color="6060BB"></font>): <font color="BB6060">DotNetPreAdapter.Domain.Datastructure.SubDataStructure</font>
  }
  abstract class DotNetPreAdapter.Utils.Logger [[DotNetPreAdapter.Utils.Logger-diagram-detailed.svg]]  {
    + loggingType: DotNetPreAdapter.Utils.LoggingType
==
    - log(<font color="6060BB"></font>): <font color="BB6060">void</font>
    + LogError(<font color="6060BB"></font>): <font color="BB6060">void</font>
    + LogWarning(<font color="6060BB"></font>): <font color="BB6060">void</font>
    + LogInfo(<font color="6060BB"></font>): <font color="BB6060">void</font>
    + LogDebug(<font color="6060BB"></font>): <font color="BB6060">void</font>
    + LogTrace(<font color="6060BB"></font>): <font color="BB6060">void</font>
  }
abstract class MyNamespace.UnusedClass [[MyNamespace.UnusedClass-diagram-detailed.svg]] #yellow {
}
abstract class MyNamespace.UnusedClass1 [[MyNamespace.UnusedClass1-diagram-detailed.svg]] #yellow {
  + doNothing(<font color="6060BB"></font>): <font color="BB6060">void</font>
}
abstract class MyNamespace.UnusedClass1_DOT_InnerClass [[MyNamespace.UnusedClass1.InnerClass-diagram-detailed.svg]] #yellow {
  + UnusedInnerClass(<font color="6060BB">unusedClass:MyNamespace.UnusedClass</font>): <font color="BB6060">void</font>
}
  interface MyNamespace.DotNetPreAdapter.IMyTest [[MyNamespace.DotNetPreAdapter.IMyTest-diagram-detailed.svg]] #yellow {
    - unused(<font color="6060BB"></font>): <font color="BB6060">void</font>
  }
  abstract class MyNamespace.DotNetPreAdapter.InnerClassBase [[MyNamespace.DotNetPreAdapter.InnerClassBase-diagram-detailed.svg]] #yellow {
  }
  abstract class MyNamespace.DotNetPreAdapter.InnerClass [[MyNamespace.DotNetPreAdapter.InnerClass-diagram-detailed.svg]] #yellow {
    - unused(<font color="6060BB"></font>): <font color="BB6060">void</font>
  }
  abstract class MyNamespace.DotNetPreAdapter.InnerClass_DOT_InnerTestUnusedInInnerClass [[MyNamespace.DotNetPreAdapter.InnerClass.InnerTestUnusedInInnerClass-diagram-detailed.svg]] #yellow {
  }
  abstract class MyNamespace.DotNetPreAdapter.UnusedASTVisitor [[MyNamespace.DotNetPreAdapter.UnusedASTVisitor-diagram-detailed.svg]] #yellow {
    + logger: DotNetPreAdapter.Utils.Logger
    + unusedD: DotNetPreAdapter.Domain.Datastructure
==
  }
      abstract class MyNamespace.DotNetPreAdapter.DotNetPreAdapter.RecursiveFileProcessor.InnerClass [[MyNamespace.DotNetPreAdapter.DotNetPreAdapter.RecursiveFileProcessor.InnerClass-diagram-detailed.svg]] #yellow {
      }
 ' *************************************** 
 ' *************************************** 
 ' *************************************** 
' Class relations extracted from namespace:
' 
' Class relations extracted from namespace:
' DotNetPreAdapter
DotNetPreAdapter.Program -[#909090]-> MyNamespace.UnusedClass  : uses 
DotNetPreAdapter.Program -[#909090]-> MyNamespace.UnusedClass1  : uses 
DotNetPreAdapter.Program -[#909090]-> DotNetPreAdapter.Utils.Logger  : uses 
' Class relations extracted from namespace:
' DotNetPreAdapter.Domain
DotNetPreAdapter.Domain.Datastructure *-[#10BB10]- DotNetPreAdapter.Utils.Logger 
' Class relations extracted from namespace:
' DotNetPreAdapter.Utils
' Class relations extracted from namespace:
' MyNamespace
MyNamespace.UnusedClass1 +-[#10BBBB]- MyNamespace.UnusedClass1_DOT_InnerClass 
MyNamespace.UnusedClass1.InnerClass .[#6060BB].> MyNamespace.UnusedClass  : uses 
' Class relations extracted from namespace:
' MyNamespace.DotNetPreAdapter
MyNamespace.DotNetPreAdapter.InnerClassBase <|-[#red]- MyNamespace.DotNetPreAdapter.InnerClass
MyNamespace.DotNetPreAdapter.IMyTest <|-[#red]- MyNamespace.DotNetPreAdapter.InnerClass
MyNamespace.DotNetPreAdapter.InnerClass +-[#10BBBB]- MyNamespace.DotNetPreAdapter.InnerClass_DOT_InnerTestUnusedInInnerClass 
Enum <|-[#red]- MyNamespace.DotNetPreAdapter.InnerClass_DOT_InnerTestUnusedInInnerClass
IComparable <|-[#red]- MyNamespace.DotNetPreAdapter.InnerClass_DOT_InnerTestUnusedInInnerClass
IFormattable <|-[#red]- MyNamespace.DotNetPreAdapter.InnerClass_DOT_InnerTestUnusedInInnerClass
IConvertible <|-[#red]- MyNamespace.DotNetPreAdapter.InnerClass_DOT_InnerTestUnusedInInnerClass
CSharpSyntaxWalker <|-[#red]- MyNamespace.DotNetPreAdapter.UnusedASTVisitor
MyNamespace.DotNetPreAdapter.UnusedASTVisitor *-[#10BB10]- DotNetPreAdapter.Utils.Logger 
MyNamespace.DotNetPreAdapter.UnusedASTVisitor *-[#10BB10]- DotNetPreAdapter.Domain.Datastructure 
' Class relations extracted from namespace:
' MyNamespace.DotNetPreAdapter.DotNetPreAdapter.RecursiveFileProcessor
@enduml